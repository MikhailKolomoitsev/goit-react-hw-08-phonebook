{"version":3,"sources":["redux/actions.js","components/Filter/Filter.jsx","redux/operations.js","components/Form/Form.jsx","redux/selectors.js","components/ListContacts/ListContacts.jsx","components/UserPage.jsx","utils/routes.js","components/login/API.jsx","components/login/slice.jsx","components/login/thunk.jsx","components/login/components/Registration.jsx","components/login/components/Login.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/HomePage.jsx","App.jsx","redux/reducer.js","redux/store.jsx","index.js"],"names":["changeFilter","createAction","Filter","id","uuidv4","dispatch","useDispatch","TextField","label","type","onChange","e","target","value","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","contacts","data","message","addContact","name","number","post","contact","deleteContact","contactID","delete","INITIAL_VALUES","connect","onSubmit","obj","validate","useCallback","values","errors","length","initialValues","setSubmitting","touched","handleChange","handleBlur","handleSubmit","isSubmitting","fullWidth","style","maxwidth","onBlur","error","Boolean","helperText","Button","variant","disabled","Object","keys","getisLoggedIn","user","token","getFilteredContacts","createSelector","filter","entities","normalizedFilter","toLowerCase","includes","onClick","useEffect","useSelector","selectors","List","sx","width","maxWidth","bgcolor","component","map","ListItem","UserPage","className","routes","ACCOUNT_BASE_URL","loginSlice","createSlice","initialState","email","reducers","currentSuccess","state","payload","currentFailure","registerSuccess","registerFailure","loginSuccess","loginFailure","logoutSuccess","action","logoutFailure","actions","TOKEN","headers","common","Authorization","current","getState","persist","console","log","then","response","catch","passwrod","confirmPassword","Registration","useState","showPassword","setshowPassword","togglePassword","prev","test","password","size","to","Login","credentials","PrivateRoute","Component","rest","isLoggedIn","render","props","PublicRoute","HomePage","App","Container","fallback","path","exact","createReducer","fulfilled","isLoading","pending","rejected","combineReducers","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","userReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.068ffc89.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\"\n\nexport const changeFilter=createAction('contacts/changeFilter')\n\nexport const AddContactRequest=createAction('contacts/AddContactRequest')\nexport const addContactSuccess=createAction('contacts/addContactSuccess')\nexport const addContactError=createAction('contacts/addContactError')\n\nexport const deleteContactRequest=createAction('contacts/deleteContactRequest')\nexport const deleteContactSuccess=createAction('contacts/deleteContactSuccess')\nexport const deleteContactError=createAction('contacts/deleteContactError')","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport PropTypes from 'prop-types'\n// import { connect } from \"react-redux\";\nimport { changeFilter } from 'redux/actions'\nimport { useDispatch } from 'react-redux'\nimport TextField from '@material-ui/core/TextField'\n\nexport default function Filter() {\n  const id = uuidv4()\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <TextField\n        id={id}\n        label=\"Filter via name\"\n        type=\"text\"\n        onChange={(e) => {\n          dispatch(changeFilter(e.target.value))\n        }}\n      />\n    </>\n  )\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\n// const mapStateToProps = (state) => ({\n//   value: state.contacts.filter,\n\n// })\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: (e) => dispatch(actions.changeFilter(e.target.value))\n// })\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import axios from 'axios'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\n// import { getisLoggedIn } from './selectors';\n\nconst URL = 'https://connections-api.herokuapp.com'\n// if (getisLoggedIn()) {\n//   const TOKEN = getisLoggedIn()\n\n//   axios.defaults.headers.common.Authorization = `Bearer ${TOKEN}`;\n// }\n\naxios.defaults.baseURL = URL\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await axios.get('/contacts')\n      return contacts.data\n    } catch (error) {\n      return rejectWithValue(error.message)\n    }\n  },\n)\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, { rejectWithValue }) => {\n    try {\n      const contact = await axios.post('/contacts', { name, number })\n      return contact.data\n    } catch (error) {\n      return rejectWithValue(error.message)\n    }\n  },\n)\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactID, { rejectWithValue }) => {\n    try {\n      const contact = await axios.delete(`contacts/${contactID}`)\n      return contact\n    } catch (error) {\n      return rejectWithValue(error.message)\n    }\n  },\n)\n\n// export const deleteContact=contactID=>dispatch=>{\n// dispatch(deleteContactRequest())\n// axios\n// .delete(`contacts/${contactID}`)\n// .then(()=>dispatch(deleteContactSuccess(contactID)))\n// .catch(error=>dispatch(deleteContactError(error.message)))\n// }\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport { addContact } from 'redux/operations'\nimport { Formik } from 'formik'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\n// import { useDispatch } from 'react-redux'\n\nconst INITIAL_VALUES = {\n  name: '',\n  number: '',\n}\n\nfunction Form({ onSubmit }) {\n  // const dispatch = useDispatch()\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    const { name, number } = values\n    onSubmit({ name, number })\n  }\n\n  const validate = useCallback((values) => {\n    const errors = {}\n    if (!values.name) {\n      errors.name = 'Required🧐'\n    } else if (values.name.length < 2) {\n      errors.name = 'Invalid name😢'\n    }\n    if (!values.number) {\n      errors.number = 'Required🧐'\n    } else if (values.number.length < 7 || values.number.length > 15) {\n      errors.number = 'Invalid value, number should have  7-15 symbols😉'\n    }\n    return errors\n  }, [])\n\n  return (\n    <Formik\n      initialValues={INITIAL_VALUES}\n      validate={validate}\n      onSubmit={handleSubmit}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        /* and other goodies */\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <TextField\n            fullWidth\n            style={{ maxwidth: '350px' }}\n            id=\"name\"\n            name=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            value={values.name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.name && Boolean(errors.name)}\n            helperText={touched.name && errors.name}\n          />\n          <br />\n          <TextField\n            fullWidth\n            style={{ maxwidth: '350px' }}\n            id=\"login\"\n            name=\"number\"\n            label=\"Number\"\n            type=\"number\"\n            value={values.number}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.number && Boolean(errors.number)}\n            helperText={touched.number && errors.number}\n          />\n          <br />\n          <br />\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={\n              isSubmitting ||\n              !(\n                Object.keys(touched).length ===\n                  Object.keys(INITIAL_VALUES).length &&\n                Object.keys(errors).length === 0\n              )\n            }\n          >\n            Add contact\n          </Button>\n        </form>\n      )}\n    </Formik>\n  )\n}\nconst mapDispatchToProrps = (dispatch) => ({\n  onSubmit: (obj) => dispatch(addContact(obj)),\n})\nexport default connect(null, mapDispatchToProrps)(Form)\n","import { createSelector } from 'reselect'\n\nexport const getContacts = ({ contacts }) => contacts.entities\nexport const getFilter = ({ filter }) => filter\nexport const getisLoggedIn = ({ user }) => (user.token ? true : false)\nexport const getToken = getisLoggedIn\n\nexport const getFilteredContacts = createSelector(\n  [getFilter, getContacts],\n  (filter, contacts) => {\n    if (filter) {\n      const normalizedFilter = filter.toLowerCase()\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      )\n    }\n    return contacts\n  },\n)\n","import React from 'react'\n// import PropTypes from \"prop-types\";\nimport { connect } from 'react-redux'\nimport { useEffect } from 'react'\nimport { fetchContacts, deleteContact } from 'redux/operations'\nimport * as selectors from 'redux/selectors'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ListItem, List } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\n\nfunction ListContacts({ onClick }) {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  const contacts = useSelector(selectors.getFilteredContacts)\n\n  return (\n    <List\n      sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n    >\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            {name} {number}\n            <Button\n              variant=\"outlined\"\n              id={id}\n              onClick={(e) => onClick(e.target.id)}\n            >\n              delete\n            </Button>\n          </ListItem>\n        ))}\n    </List>\n  )\n}\n\n// ListContacts.propTypes = {\n//   contacts: PropTypes.oneOfType([\n//     PropTypes.string,\n//     PropTypes.number,\n//     PropTypes.array,\n//   ]),\n//   onClick: PropTypes.func.isRequired,\n// };\n\nconst mapDispatchToProrps = (dispatch) => ({\n  onClick: (id) => dispatch(deleteContact(id)),\n})\nexport default connect(null, mapDispatchToProrps)(ListContacts)\n","import Filter from './Filter/Filter'\nimport Form from './Form/Form'\nimport ListContacts from './ListContacts/ListContacts'\n// import { useCallback } from 'react'\n// import { useDispatch } from 'react-redux'\n// import Button from '@material-ui/core/Button'\n// import { logout } from 'components/login/thunk'\n\nexport default function UserPage() {\n  //   const dispatch = useDispatch()\n  return (\n    <div className=\"App\">\n      <h3>Phonebook</h3>\n      <Form />\n      {/* <Button\n        variant=\"outlined\"\n        color=\"red\"\n        onClick={() => {\n          dispatch(logout())\n        }}\n      >\n        Logout\n      </Button> */}\n      <br />\n      <Filter />\n      <h3>Contacts</h3>\n      <ListContacts />\n    </div>\n  )\n}\n","const routes = {\n  home: '/goit-react-hw-08-phonebook',\n  registration: '/registration',\n  login: '/login',\n  contacts: '/contacts',\n}\n\nexport { routes }\n","export const ACCOUNT_BASE_URL = 'https://connections-api.herokuapp.com';","import { createSlice } from '@reduxjs/toolkit'\r\n// import { getisLoggedIn } from 'redux/selectors'\r\n\r\nexport const INITIAL_STATE = {\r\n  name: null,\r\n  email: null,\r\n  token: null,\r\n  error: false,\r\n}\r\n\r\nexport const loginSlice = createSlice({\r\n  name: 'user',\r\n  initialState: INITIAL_STATE,\r\n  reducers: {\r\n    currentSuccess: (state, { payload }) => {\r\n      state.name = payload.name\r\n      state.email = payload.email\r\n    },\r\n    currentFailure: (state, { payload }) => {\r\n      state.error = payload.error\r\n    },\r\n    registerSuccess: (state, { payload }) => {\r\n      state.name = payload.name\r\n      state.email = payload.email\r\n      state.token = payload.token\r\n    },\r\n    registerFailure: (state, { payload }) => {\r\n      state.error = payload.error\r\n    },\r\n    loginSuccess: (state, { payload }) => {\r\n      state.name = payload.name\r\n      state.email = payload.email\r\n      state.token = payload.token\r\n    },\r\n    loginFailure: ({ error }, { payload }) => {\r\n      error = payload.error\r\n    },\r\n    logoutSuccess: (state, action) => {\r\n      state.name = null;\r\n      state.email = null;\r\n      state.token = null;\r\n    },\r\n    logoutFailure: (state, { payload }) => {\r\n      state.error = payload;\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  currentSuccess,\r\n  currentFailure,\r\n  registerSuccess,\r\n  registerFailure,\r\n  loginSuccess,\r\n  loginFailure,\r\n  logoutSuccess,\r\n  logoutFailure,\r\n} = loginSlice.actions\r\n\r\nexport default loginSlice.reducer\r\n\r\n// {\r\n// \"user\": {\r\n//     \"name\": \"djmischa\",\r\n//         \"email\": \"djmischa@mail.com\"\r\n// },\r\n// \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTZhYWE3MTNkYjY3YTAwMTVmMmM0N2IiLCJpYXQiOjE2MzQzODA0MDF9.JjutbE8YTB6yOpTQUOWvOVybdbGX5ayrb6E7P7mwoyY\"\r\n// }\r\n","import axios from 'axios'\nimport { ACCOUNT_BASE_URL } from './API'\n// import { getisLoggedIn } from 'redux/selectors'\n\nimport {\n  currentSuccess,\n  currentFailure,\n  registerSuccess,\n  registerFailure,\n  loginSuccess,\n  loginFailure,\n  logoutSuccess,\n  logoutFailure,\n} from './slice'\n\nconst TOKEN = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = ''\n  },\n}\n\nexport function current() {\n  return function (dispatch, getState) {\n    const {\n      user: { token: persist },\n    } = getState()\n    console.log('persist:', !!persist)\n    if (!persist) {\n      return\n    }\n    TOKEN.set(persist)\n    dispatch({ type: 'CURRENT_REQUEST' })\n\n    return axios\n      .get(`${ACCOUNT_BASE_URL}/users/current`)\n      .then(function (response) {\n        console.log('response current:', response)\n        dispatch(currentSuccess(response.data))\n      })\n      .catch(function (error) {\n        TOKEN.unset()\n        dispatch(currentFailure(error.message))\n      })\n  }\n}\n\nexport function register(user) {\n  console.log('user:', user)\n  return function (dispatch) {\n    dispatch({ type: 'REGISTER_REQUEST' })\n\n    return axios\n      .post(`${ACCOUNT_BASE_URL}/users/signup`, user)\n      .then(function (response) {\n        console.log('response register:', response)\n        const {\n          user: { name, email },\n          token,\n        } = response.data\n        TOKEN.set(token)\n        dispatch(registerSuccess({ name, email, token }))\n      })\n      .catch(function (error) {\n        dispatch(registerFailure(error.message))\n      })\n  }\n}\n\nexport function login(credentials) {\n  return function (dispatch) {\n    dispatch({ type: 'LOGIN_REQUEST' })\n\n    return axios\n      .post(`${ACCOUNT_BASE_URL}/users/login`, { ...credentials })\n      .then(function (response) {\n        console.log('response login:', response)\n\n        const {\n          user: { name, email },\n          token,\n        } = response.data\n        dispatch(loginSuccess({ name, email, token }))\n        TOKEN.set(response.data.token)\n      })\n      .catch(function (error) {\n        dispatch(loginFailure(error.message))\n      })\n  }\n}\n\nexport function logout() {\n  return function (dispatch) {\n    dispatch({ type: \"LOGOUT_REQUEST\" });\n    return axios\n      .post(`${ACCOUNT_BASE_URL}/users/logout`)\n      .then(function (response) {\n        TOKEN.unset();\n        dispatch(logoutSuccess(response.data));\n      })\n      .catch(function (error) {\n        dispatch(logoutFailure(error.message));\n      });\n  };\n}","import React, { useState } from 'react'\nimport { Formik, Form } from 'formik'\nimport { useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport { routes } from 'utils/routes'\nimport { useDispatch } from 'react-redux'\nimport { register } from '../thunk'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\n\nconst INITIAL_VALUES = {\n  name: '',\n  email: '',\n  passwrod: '',\n  confirmPassword: '',\n}\n\nconst Registration = () => {\n  const dispatch = useDispatch()\n\n  const [showPassword, setshowPassword] = useState(false)\n  const togglePassword = useCallback(() => {\n    setshowPassword((prev) => !prev)\n  }, [])\n  const validate = useCallback((values) => {\n    const errors = {}\n\n    if (!values.name) {\n      errors.name = 'Required🧐'\n    } else if (values.name.length < 2) {\n      errors.name = 'Invalid name😢'\n    }\n\n    if (!values.email) {\n      errors.email = 'Required🧐'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address😢'\n    }\n\n    if (!values.password) {\n      errors.password = 'Required🧐'\n    } else if (values.password.length < 7 || values.password.length > 15) {\n      errors.password = 'Invalid value, password should have  7-15 symbols😉'\n    }\n\n    if (!values.confirmPassword) {\n      errors.confirmPassword = 'Required🧐'\n    } else if (\n      values.confirmPassword.length < 7 ||\n      values.confirmPassword.length > 15\n    ) {\n      errors.confirmPassword =\n        'Invalid value, password should have  7-15 symbols😉'\n    } else if (values.confirmPassword !== values.password) {\n      errors.confirmPassword = 'Passwords do not match😢'\n    }\n    return errors\n  }, [])\n\n  const handleSubmit = useCallback(\n    (values, { setSubmitting }) => {\n      console.log(values)\n      const { name, email, password } = values\n      dispatch(register({ name, email, password }))\n      setSubmitting(false)\n    },\n    [dispatch],\n  )\n\n  return (\n    <div>\n      <h1>Registration Form</h1>\n      <Formik\n        initialValues={INITIAL_VALUES}\n        validate={validate}\n        onSubmit={handleSubmit}\n      >\n        {({\n          isSubmitting,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          values,\n        }) => (\n          <Form>\n            <TextField\n              style={{ maxwidth: '350px' }}\n              fullWidth\n              id=\"name\"\n              name=\"name\"\n              label=\"Name\"\n              type=\"name\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.name && Boolean(errors.name)}\n              helperText={touched.name && errors.name}\n            />\n            <br />\n            <TextField\n              style={{ maxwidth: '350px' }}\n              fullWidth\n              id=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n            />\n            <br />\n            <TextField\n              style={{ maxwidth: '350px' }}\n              fullWidth\n              id=\"password\"\n              name=\"password\"\n              label=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n            />\n            <br />\n            <br />\n            <TextField\n              style={{ maxwidth: '350px' }}\n              fullWidth\n              maxwidth=\"50px\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              label=\"Confirm Password\"\n              type={showPassword ? 'text' : 'password'}\n              value={values.confirmPassword}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.confirmPassword && Boolean(errors.confirmPassword)}\n              helperText={touched.confirmPassword && errors.confirmPassword}\n            />\n            <Button size=\"small\" onClick={togglePassword}>\n              {showPassword ? 'Hide password' : 'Show password'}\n            </Button>\n            <br />\n            <br />\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={\n                isSubmitting ||\n                !(\n                  Object.keys(touched).length ===\n                    Object.keys(INITIAL_VALUES).length &&\n                  Object.keys(errors).length === 0\n                )\n              }\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Link to={routes.login}>Have an account? Login here!</Link>\n    </div>\n  )\n}\n\nexport { Registration }\n","import React, { useCallback, useState } from 'react'\nimport { Formik } from 'formik'\nimport { routes } from 'utils/routes'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport { useDispatch } from 'react-redux'\nimport { login } from '../thunk'\n\nconst INITIAL_VALUES = {\n  email: '',\n  password: '',\n}\n\nconst Login = () => {\n  const dispatch = useDispatch()\n\n  const [showPassword, setshowPassword] = useState(false)\n  const togglePassword = useCallback(() => {\n    setshowPassword((prev) => !prev)\n  }, [])\n  const validate = useCallback((values) => {\n    const errors = {}\n    if (!values.email) {\n      errors.email = 'Required🧐'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address😢'\n    }\n\n    if (!values.password) {\n      errors.password = 'Required🧐'\n    } else if (values.password.length < 7 || values.password.length > 15) {\n      errors.password = 'Invalid value, password should have  7-15 symbols😉'\n    }\n    return errors\n  }, [])\n\n  const handleSubmit = useCallback(\n    (values, { setSubmitting }) => {\n      const { email, password } = values\n      dispatch(login({ email, password }))\n      setSubmitting(false)\n    },\n    [dispatch],\n  )\n\n  return (\n    <div>\n      <h1>Login Form</h1>\n      <Formik\n        initialValues={INITIAL_VALUES}\n        validate={validate}\n        onSubmit={handleSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <TextField\n              fullWidth\n              style={{ maxwidth: '350px' }}\n              id=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n            />\n            <br />\n            <TextField\n              fullWidth\n              style={{ maxwidth: '350px' }}\n              id=\"login\"\n              name=\"password\"\n              label=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n            />\n            <Button size=\"small\" onClick={togglePassword}>\n              {showPassword ? 'Hide password' : 'Show password'}\n            </Button>\n            <br />\n            <br />\n\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={\n                isSubmitting ||\n                !(\n                  Object.keys(touched).length ===\n                    Object.keys(INITIAL_VALUES).length &&\n                  Object.keys(errors).length === 0\n                )\n              }\n            >\n              Submit\n            </Button>\n          </form>\n        )}\n      </Formik>\n      <br />\n      <Link to={routes.registration}>Do not have account? Register here!</Link>\n    </div>\n  )\n}\n\nexport { Login }\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { getisLoggedIn } from 'redux/selectors'\nimport { Route, Redirect } from 'react-router-dom'\nimport { routes } from 'utils/routes'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isLoggedIn = useSelector(getisLoggedIn)\n  console.log('PrivateRoute:', isLoggedIn)\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.registration} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport { getisLoggedIn } from 'redux/selectors'\nimport { routes } from 'utils/routes'\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  const isLoggedIn = useSelector(getisLoggedIn)\n  console.log('PublicRoute:', isLoggedIn)\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Redirect to={routes.home} /> : <Component {...props} />\n      }\n    />\n  )\n}\n\nexport default PublicRoute\n","export function HomePage() {\r\n  return <h1>Home</h1>\r\n}\r\n","import './App.css'\nimport React, { Suspense, useEffect } from 'react'\nimport UserPage from 'components/UserPage'\nimport { routes } from 'utils/routes'\nimport { Registration } from '../src/components/login/components/Registration'\nimport { Login } from '../src/components/login/components/Login'\nimport { Switch, NavLink } from 'react-router-dom'\nimport PrivateRoute from 'components/PrivateRoute'\nimport PublicRoute from 'components/PublicRoute'\nimport Container from '@material-ui/core/Container'\n\nimport { useSelector } from 'react-redux'\nimport { getisLoggedIn } from 'redux/selectors'\nimport { useDispatch } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport { logout } from 'components/login/thunk'\nimport { current } from 'components/login/thunk'\nimport { HomePage } from 'components/HomePage'\nconsole.log(current)\nexport default function App() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    console.log(`APP useEffect`)\n    dispatch(current())\n  }, [dispatch])\n\n  const isLoggedIn = useSelector(getisLoggedIn)\n\n  const logoutFunction = () => {\n    // тут вызываем операцию разлогинизации\n    dispatch(logout())\n  }\n  return (\n    <>\n      <header>\n        <nav>\n          <ul className='header-nav_list'>\n            <li>\n              <NavLink to={routes.home}>Home</NavLink>\n            </li>\n            <li>\n              <NavLink to={routes.contacts}>Contacts</NavLink>\n            </li>\n            <li>\n              {isLoggedIn ? (\n                <Button type=\"button\" onClick={logoutFunction}>\n                  logout\n                </Button>\n              ) : (\n                  <ul className='header-nav_list'>\n                  <li>\n                    <NavLink to={routes.login}>Login</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to={routes.registration}>Registration</NavLink>\n                  </li>\n                </ul>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <Container maxWidth=\"sm\" className=\"Container\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <PrivateRoute component={UserPage} path={routes.contacts} exact />\n            <PublicRoute path={routes.home} exact component={HomePage} />\n            <PublicRoute\n              path={routes.registration}\n              exact\n              component={Registration}\n            />\n            <PublicRoute path={routes.login} exact component={Login} />\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  )\n}\n","import { combineReducers } from 'redux'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { fetchContacts } from './operations'\nimport { changeFilter } from './actions'\nimport { addContact, deleteContact } from './operations'\n// import userReducer from 'components/login/slice'\n\nconst entities = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => {\n    return action.payload\n  },\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n})\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n})\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n})\nexport const filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n})\nexport default combineReducers({\n  entities,\n  isLoading,\n  error,\n})\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport contactsReducer, { filter } from './reducer'\nimport userReducer from 'components/login/slice'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n// import logger from \"redux-logger\";\n\nconst persistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n}\nconst persistedReducer = persistReducer(persistConfig, userReducer)\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n]\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter,\n    user: persistedReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n})\n\nconst persistor = persistStore(store)\nexport { store, persistor }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={'...'} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}